{"version":3,"sources":["../../../projects/ngx-image-comparison-slider/src/lib/ngx-image-comparison-slider.service.ts","../../../projects/ngx-image-comparison-slider/src/lib/ngx-image-comparison-slider.component.ts","../../../projects/ngx-image-comparison-slider/src/lib/ngx-image-comparison-slider.module.ts"],"names":["Injectable","args","providedIn","separatorImages","black","white","NgxImageComparisonSliderComponent","sanitizer","this","value","Subject","maxWidth","maxHeight","imageFit","sliderWidth","sliderColor","showSliderBall","calcSliderBallDif","sliderBallImageColor","sliderBallImageSrc","alt1","alt2","zIndexStart","startPos","sliderShadow","isDragging","prototype","_setElementWidthHeight","x","w","h","nativeElement","style","height","width","_setElementStyle","attr","val","_setElementStylesObj","styles","_this","Object","keys","forEach","k","_initValues","sliderBallSize","sliderBallDif","leftBorder","rightBorder","bypassSecurityTrustResourceUrl","_initStyles","div","zIndex","div2","top","marginBottom","slider","backgroundColor","boxShadow","sliderBall","left","borderRadius","image","image2","objectFit","_initListeners","valueSub","subscribe","clip","clickOffset","divOffset","getBoundingClientRect","startListener","e","preventDefault","console","log","MouseEvent","offsetX","moveListener","newVal","clientX","touches","item","next","Math","max","min","endListener","addEventListener","window","_initStartPos","startVal","ngOnInit","ngAfterViewInit","ngOnDestroy","unsubscribe","Component","selector","template","DomSanitizer","ViewChild","Input","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxImageComparisonSliderService {\n\n  constructor() { }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\n\nconst separatorImages = {\n  black: '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',\n  white: 'iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5QYQEiYIh6P+pgAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAChElEQVR42u3dQVLDMBBEUTxF5f7nzQYuAEkcsDRSv79lEan7W3bsyBwfYdzv969Hf7/dbkdSHofis0U4lJ8twaH8bAlK+dmUCLIlIkA4hyM3+1rACuAaAAQAAUAAEAAEAAFAABAABAABQAAQAAQAAUAAEAAEAAFAABAABAABQAAQAATAcnyO+JBH+/TSXsnSLZtj5gSvnGz3zaGzchl6CjhTQtLLHDrlUh0miXlZVqcBJ0jTLZty5GevBNVtgDsL1DGfcuRnrwSl/GwJqlv5O98Y6nivoxz52StBKT9bgupUfsJzgavm+G4npfxsCUr52RKU8rMlKOVnS1DKz5aglJ8tQSk/W4JSfrYEx6jyRwc06xnFavkdKw3+TCGjBVg1u1pxAt3Gu3J2teIEOgW/ena1+lO9mePfITtbw8LZQoAZR+Iuv4ewAlgBQAAQAARYlhnPGHZ5rmEFSF8BVjd55vh3yK5WnkiHca+e3ZJPA18Jfcbj4BXzG/Z7gNFHyup7Fkf1UKMmaitZv/J//RZAgozyH34NJMH+5T+9D0CCvct/KgAJ9i7/JQFIsG/5LwtAgj3LPyUACfYr/7QAJNir/LcEIME+5b8twJUSYGwXNeuDE1eBK+b21w5q9gAwN/vqMhDMyby6DYhMYzOqrgNT3JiMq7OduD7b6jRQr4odn011mahXxc7JpjpM1Kti52UzLPifboJcObmVfhQ6OpspAozGfzJpcAoAAUAAEAAEAAFAABAABAABQAAQAAQAAUAAEAAEAAFAABAABAABQAAQAAQAAXARW2/K/K/tYTtvXrUCOAUg9ejfXgCvqwm/BvjrtUCCQDFHyFkJUlaPuCXymQhpp41vCXPA3GxbkbAAAAAASUVORK5CYII='\n};\n\n@Component({\n  selector: 'ngx-image-comparison-slider',\n  template: `\n    <div style=\"overflow: hidden;\" #d1>\n      <img\n        [src]=\"src1\"\n        [alt]=\"alt1\"\n        #i1/>\n    </div>\n    <div style=\"position: relative; cursor: col-resize;\" #s>\n      <div style=\"position: absolute;\" [hidden]=\"!showSliderBall\" #sb>\n        <img\n          alt=\"separate image\"\n          [src]=\"sliderBallImageSrc\"\n          width=\"60%\"\n          style=\"left: 20%; top: 20%; position: absolute\"\n        />\n      </div>\n    </div>\n    <div style=\"overflow: hidden; position: relative;\" #d2>\n      <img\n        [src]=\"src2\"\n        [alt]=\"alt2\"\n        style=\"position: absolute;\"\n        #i2\n      />\n    </div>\n  `,\n  styles: []\n})\nexport class NgxImageComparisonSliderComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('d1') div: ElementRef;\n  @ViewChild('d2') div2: ElementRef;\n  @ViewChild('s') slider: ElementRef;\n  @ViewChild('i1') image: ElementRef;\n  @ViewChild('i2') image2: ElementRef;\n  @ViewChild('sb') sliderBall: ElementRef;\n\n  value = new Subject<number>();\n  valueSub: Subscription;\n  @Input() src1: string;\n  @Input() src2: string;\n  @Input() maxWidth = 600;\n  @Input() maxHeight = 400;\n  @Input() imageFit: 'cover' | 'contain' | 'fill' = 'cover';\n  @Input() sliderWidth = 5;\n  @Input() sliderColor = 'whitesmoke';\n  @Input() showSliderBall = true;\n  @Input() calcSliderBallDif = true;\n  @Input() sliderBallSize;\n  @Input() sliderBallImageColor: 'black' | 'white' = 'black';\n  sliderBallImageSrc: SafeResourceUrl = '';\n  @Input() leftBorder: number;\n  @Input() rightBorder: number;\n  @Input() alt1 = 'sliderImage1';\n  @Input() alt2 = 'sliderImage2';\n  @Input() zIndexStart = 1000;\n  @Input() startPos: 'leftBorder' | 'middle' | 'rightBorder' | number = 'middle';\n  @Input() sliderShadow = true;\n  isDragging = false;\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  _setElementWidthHeight(x: ElementRef, w: number, h: number): void {\n    x.nativeElement.style.height = h + 'px';\n    x.nativeElement.style.width = w + 'px';\n  }\n\n  _setElementStyle(x: ElementRef, attr: string, val: string | number): void {\n    (x.nativeElement.style as CSSStyleDeclaration)[attr] = val;\n  }\n\n  _setElementStylesObj(x: ElementRef, styles: Record<string, string | number>): void {\n    Object.keys(styles).forEach(k => {\n      this._setElementStyle(x, k, styles[k]);\n    });\n  }\n\n  _initValues(): void {\n    this.sliderBallSize = !!this.sliderBallSize\n      ? this.sliderBallSize\n      : this.sliderWidth * 4;\n    const sliderBallDif = this.showSliderBall && this.calcSliderBallDif ? this.sliderBallSize / 2 - this.sliderWidth / 2 : 0;\n    this.leftBorder = !!this.leftBorder && this.leftBorder > 0\n      ? this.leftBorder\n      : sliderBallDif;\n    this.rightBorder = !!this.rightBorder && this.rightBorder < this.maxWidth\n      ? this.rightBorder\n      : this.maxWidth - this.sliderWidth - sliderBallDif;\n    this.sliderBallImageSrc = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${separatorImages[this.sliderBallImageColor]}`);\n  }\n\n  _initStyles(): void {\n    // LEFT CONTAINER\n    this._setElementWidthHeight(this.div, this.maxWidth, this.maxHeight);\n    this._setElementStylesObj(this.div, {\n      zIndex: this.zIndexStart + 1\n    });\n    // RIGHT CONTAINER\n    this._setElementWidthHeight(this.div2, this.maxWidth, this.maxHeight);\n    this._setElementStylesObj(this.div2, {\n      top: -this.maxHeight * 2 + 'px',\n      marginBottom: -this.maxHeight * 2 + 'px',\n      zIndex: this.zIndexStart\n    });\n    // SLIDER\n    this._setElementWidthHeight(this.slider, this.sliderWidth, this.maxHeight);\n    this._setElementStylesObj(this.slider, {\n      top: -this.maxHeight + 'px',\n      backgroundColor: this.sliderColor,\n      zIndex: this.zIndexStart + 2,\n      boxShadow: this.sliderShadow ? '0 0 15px black' : 'none'\n    });\n    this._setElementWidthHeight(this.sliderBall, this.sliderBallSize, this.sliderBallSize);\n    this._setElementStylesObj(this.sliderBall, {\n      top: this.maxHeight / 2 - this.sliderBallSize / 2 + 'px',\n      left: this.sliderWidth / 2 - this.sliderBallSize / 2 + 'px',\n      borderRadius: this.sliderBallSize / 2 + 'px',\n      backgroundColor: this.sliderColor,\n    });\n    // LEFT IMAGE\n    this._setElementWidthHeight(this.image, this.maxWidth, this.maxHeight);\n    // RIGHT IMAGE\n    this._setElementWidthHeight(this.image2, this.maxWidth, this.maxHeight);\n    this._setElementStylesObj(this.image2, {\n      objectFit: this.imageFit,\n    });\n  }\n\n  _initListeners(): void {\n    this.valueSub = this.value.subscribe(x => {\n      this.div.nativeElement.style.width = x + 'px';\n      this.slider.nativeElement.style.left = x + 'px';\n      this.image2.nativeElement.style.clip =\n        'rect(0px,2000px,2000px,' + x + 'px)';\n    });\n\n    let clickOffset = 0;\n    const divOffset = this.div.nativeElement.getBoundingClientRect().left;\n    const startListener = (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n      console.log(e);\n      this.isDragging = true;\n      if (e instanceof MouseEvent) {\n        clickOffset = e.offsetX;\n      }\n    };\n    const moveListener = (e: MouseEvent | TouchEvent) => {\n      if (this.isDragging) {\n        if (e instanceof MouseEvent) {\n          e.preventDefault();\n        }\n        const clientX = e instanceof MouseEvent\n          ? e.clientX\n          : e.touches.item(0).clientX;\n        const newVal = clientX - clickOffset - divOffset;\n        this.value.next(\n          Math.max(Math.min(newVal, this.rightBorder), this.leftBorder)\n        );\n      }\n    };\n    const endListener = (e: MouseEvent | TouchEvent) => {\n      this.isDragging = false;\n    };\n\n    this.slider.nativeElement.addEventListener('mousedown', startListener);\n    this.slider.nativeElement.addEventListener('touchstart', startListener);\n    window.addEventListener('mousemove', moveListener);\n    window.addEventListener('touchmove', moveListener);\n    window.addEventListener('mouseup', endListener);\n    window.addEventListener('touchend', endListener);\n  }\n\n  _initStartPos(): void {\n    let startVal: number;\n    switch (this.startPos) {\n      case 'leftBorder':\n        startVal = this.leftBorder;\n        break;\n      case 'middle':\n        startVal =\n          this.maxWidth / 2 - this.sliderWidth / 2 - (this.showSliderBall ? this.sliderBallSize / 2 : 0);\n        break;\n      case 'rightBorder':\n        startVal = this.rightBorder;\n        break;\n      default:\n        startVal = this.startPos;\n        break;\n    }\n    this.value.next(startVal);\n  }\n\n  ngOnInit(): void {\n    this._initValues();\n  }\n\n  ngAfterViewInit(): void {\n    this._initStyles();\n    this._initListeners();\n    this._initStartPos();\n  }\n\n  ngOnDestroy(): void {\n    if (this.valueSub) {\n      this.valueSub.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImageComparisonSliderComponent } from './ngx-image-comparison-slider.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxImageComparisonSliderComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxImageComparisonSliderComponent\n  ]\n})\nexport class NgxImageComparisonSliderModule { }\n"]}